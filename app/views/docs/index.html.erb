<h1>Docs</h1>
<p>Adbum is a minimalistic <b>API</b> to retrieve images on demand. This product is inspired by the need of getting images based
  on keywords for advertisement campaigns. The reference describes each available resource in the API, so you can learn
  about parameters, errors, and result formats.</p>

<h2>Entry Point</h2>
<p>To access the API yo need to use the following <b>URL</b>:</p>
<% api_url = path_to_url('api/images') %>
<code><%= api_url %></code>

<h2>Parameters</h2>
<p>Adbum uses two <b>GET</b> parameters:</p>
<ul>
  <li><b>tags </b> <i>(String) [Optional]</i>: Image keywords to match as a comma separated value. Leave this parameter
    blank to not filter. Retrieved images must contain all tags</li>
  <li><b>limit </b> <i>(Integer) [Optional]</i>: Number of images to output. Leave this parameter blank to not limit</li>
</ul>

<h4>Examples</h4>
<pre class="prettyprint well">
  <code class="lang-js">
    "<%= "#{api_url}" %>" // Get all images without limiting the output
    "<%= "#{api_url}?tags=leather,hat" %>" // Get images by tags but not limiting the output
    "<%= "#{api_url}?limit=20" %>" // Get images limiting just the output
    "<%= "#{api_url}?tags=cute,cat&limit=20" %>" // Get images by tags and also limiting the output
  </code>
</pre>

<h2>Reponses</h2>
Since Adbum is a Restful JSON API, the response will be a well formatted JSON object.

<h3>Ok <small>(Response Code: 200)</small></h3>
<p>This is the regular response, counting and listing available images based on tags and limited on demand.</p>
<pre class="prettyprint well">
  <code class="lang-js">
  {
    "count": Integer, // How many images were found
    "images": [
      {
        "url": String, // Image URL
        "width": Integer, // Image Width
        "height": Integer // Image height
      },
    ]
  }

  // Example: "<%= "#{api_url}?tags=cute,cat&limit=3" %>"
  {
    "count": 3
    "images": [
      {
        "url": "http://0.0.0.0:5000/system/images/media/000/000/033/original/cute_kitty.jpg?1487212007",
        "width": 568,
        "height": 568
      },
      {
        "url": "http://0.0.0.0:5000/system/images/media/000/000/035/original/charles.jpg?1487212264",
        "width": 568,
        "height": 568
      },
      {
        "url": "http://0.0.0.0:5000/system/images/media/000/000/036/original/persian_ball.png?1487212285",
        "width": 590,
        "height": 590
      }
    ]
  }
  </code>
</pre>

<h3>Bad Request <small>(Response Code: 400)</small></h3>
<p>This response happens when the request is malformed. In other words, the parameters sent by the API consumer
  didn't follow the rules.</p>
<pre class="prettyprint well">
  <code class="lang-js">
  {
    "error": String // Error message
  }

  // Example: "<%= "#{api_url}?limit=all" %>"
  {
    "error": "Limit must be an integer"
  }
  </code>
</pre>

<h3>Not Found <small>(Response Code: 404)</small></h3>
<p>This response happens when an API consumer try to access to a no existing resource.</p>
<pre class="prettyprint well">
  <code class="lang-js">
  {
    "error": String // Error message
  }

  // Example: "<%= "#{api_url}/wrong" %>"
  {
    "error": "Resource not found"
  }
  </code>
</pre>

<h3>Internal Server Error <small>(Response Code: 500)</small></h3>
<p>This response happens when there is some uncaught error, usually a system exception. The error message comes from the exception.</p>
<pre class="prettyprint well">
  <code class="lang-js">
  {
    "error": String // Error message
  }

  // Example: "<%= "#{api_url}" %>"
  // Then something bad happens
  {
    "error": "Something went really bad internally. Please call 911! ;)"
  }
  </code>
</pre>